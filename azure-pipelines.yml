trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - /cluster/azure/*
    - /cluster/common/*
    - /cluster/environments/azure-simple/*
    exclude:
    - README.md
pr:
  autoCancel: false
  branches:
    include:
    - master
  paths:
    include:
    - /cluster/azure/*
    - /cluster/common/*
    - /cluster/environments/azure-simple/*
    - /test/*
    exclude:
    - README.md

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- checkout: self
  persistCredentials: true
  clean: true

- task: ShellScript@2
  displayName: Validate GitOps pipeline
  inputs:
    scriptPath: gitops/azure-devops/build.sh
  env:
    VERIFY_ONLY: 1
    HLD_PATH: git://github.com/Microsoft/fabrikate-production-cluster-demo.git
    
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up Go workspace'

- script: |
    terraform -version
    wget https://releases.hashicorp.com/terraform/$(tf_version)/terraform_$(tf_version)_linux_amd64.zip -q
    unzip -q terraform_$(tf_version)_linux_amd64.zip
    sudo mv terraform /usr/local/bin
    terraform -version
    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/local/bin/kubectl
    curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh
    chmod 700 get_helm.sh
    ./get_helm.sh
  displayName: 'Install terraform, kubectl, helm'

- script: |
    ssh-keygen -f id_rsa -t rsa -N "bedrock@microsoft.com"
    export ssh_key=$(readlink -f id_rsa.pub)
    export public_key=$(cat id_rsa.pub)
    go test -v -timeout 99999s
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
  workingDirectory: '$(modulePath)/test'
  displayName: 'Create ssh keys, get deps, then test'
